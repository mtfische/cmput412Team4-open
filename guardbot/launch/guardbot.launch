<launch>
  <!--> Turtlebot Minimal <-->
  <include file="$(find turtlebot_bringup)/launch/minimal.launch" />

  <!--> 3dsensor <-->
  <arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)"/>  <!-- r200, kinect, asus_xtion_pro -->
  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch"/>

  <!--> Joystick <-->
  <node pkg="joy" type="joy_node" name="joystick"/>

  <!--> Map Server <-->
  <arg name="map_file" default="$(find guardbot)/map/map.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/>

  <!--> USB Cam <-->
  <!--
  <node name="cv_camera" pkg="cv_camera" type="cv_camera_node">
    <param name="cv_camera/device_id" value="1"/>
  </node>
  -->

  <!--> Sound Node <-->
  <node name="soundplay_node" pkg="sound_play" type="soundplay_node.py"/>

  <!--Ar_track_Alvar-->
  <arg name="marker_size" default="4.4" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />
	<arg name="cam_image_topic" default="/camera/depth_registered/points" />
	<arg name="cam_info_topic" default="/camera/rgb/camera_info" />
	<arg name="output_frame" default="camera_rgb_optical_frame" />
  <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkers" respawn="false" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)" />

  <!-- AR_finder Node -->
  <node name="AR_finder" pkg="guardbot" type="AR_finder.py" output="screen" respawn="false"/>

  <!--> AMCL <-->
  <arg name="custom_amcl_launch_file" default="$( find guardbot)/launch/custom_amcl.launch.xml"/>
  <include file="$(arg custom_amcl_launch_file)"/>

  <!-- Move base -->
  <arg name="custom_param_file" default="$(find turtlebot_navigation)/param/$(arg 3d_sensor)_costmap_params.yaml"/>
  <include file="$(find guardbot)/launch/custom_move_base.launch.xml">
    <arg name="custom_param_file" value="$(arg custom_param_file)"/>
  </include>

  <!-- Velocity Smoother -->
  <include file="$(find turtlebot_teleop)/launch/includes/velocity_smoother.launch.xml"/>

  <!-- Auto-Docking Node -->
  <include file="$(find kobuki_auto_docking)/launch/minimal.launch" />

  <!-- Person Detector -->
  <node name='guardbot_person_detector' pkg='guardbot' type='detector.py' output='screen' />

  <!-- GuardBot -->
  <node name="guardbot" pkg="guardbot" type="state_machine.py" output="screen">
    <remap from="cmd_vel" to="teleop_velocity_smoother/raw_cmd_vel" />
  </node>

</launch>
